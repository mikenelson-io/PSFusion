#
# Pure Fusion API
# Pure Fusion is fully API-driven. Most APIs which change the system (POST, PATCH, DELETE) return an Operation in status ""Pending"" or ""Running"". You can poll (GET) the operation to check its status, waiting for it to change to ""Succeeded"" or ""Failed"". 
# Version: 1.1
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER TimestampMs
No description available.
.PARAMETER Value
No description available.
.PARAMETER ConfidenceInterval
No description available.
.OUTPUTS

Pure1MetaValue<PSCustomObject>
#>

function Initialize-PSFPure1MetaValue {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${TimestampMs},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Double]]
        ${Value},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${ConfidenceInterval}
    )

    Process {
        'Creating PSCustomObject: PSFusion => PSFPure1MetaValue' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "timestamp_ms" = ${TimestampMs}
            "value" = ${Value}
            "confidence_interval" = ${ConfidenceInterval}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to Pure1MetaValue<PSCustomObject>

.DESCRIPTION

Convert from JSON to Pure1MetaValue<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

Pure1MetaValue<PSCustomObject>
#>
function ConvertFrom-PSFJsonToPure1MetaValue {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSFusion => PSFPure1MetaValue' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in PSFPure1MetaValue
        $AllProperties = ("timestamp_ms", "value", "confidence_interval")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "timestamp_ms"))) { #optional property not found
            $TimestampMs = $null
        } else {
            $TimestampMs = $JsonParameters.PSobject.Properties["timestamp_ms"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "value"))) { #optional property not found
            $Value = $null
        } else {
            $Value = $JsonParameters.PSobject.Properties["value"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "confidence_interval"))) { #optional property not found
            $ConfidenceInterval = $null
        } else {
            $ConfidenceInterval = $JsonParameters.PSobject.Properties["confidence_interval"].value
        }

        $PSO = [PSCustomObject]@{
            "timestamp_ms" = ${TimestampMs}
            "value" = ${Value}
            "confidence_interval" = ${ConfidenceInterval}
        }

        return $PSO
    }

}

