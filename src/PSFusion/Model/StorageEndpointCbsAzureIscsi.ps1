#
# Pure Fusion API
# Pure Fusion is fully API-driven. Most APIs which change the system (POST, PATCH, DELETE) return an Operation in status ""Pending"" or ""Running"". You can poll (GET) the operation to check its status, waiting for it to change to ""Succeeded"" or ""Failed"". 
# Version: 1.1
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

(Provider)

.PARAMETER StorageEndpointCollectionIdentity
The Storage Endpoint Collection Identity which belongs to the Azure entities.
.PARAMETER LoadBalancer
The Load Balancer id which gives permissions to CBS array appliations to modify the Load Balancer.
.PARAMETER LoadBalancerAddresses
No description available.
.OUTPUTS

StorageEndpointCbsAzureIscsi<PSCustomObject>
#>

function Initialize-PSFStorageEndpointCbsAzureIscsi {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${StorageEndpointCollectionIdentity},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${LoadBalancer},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String[]]
        ${LoadBalancerAddresses}
    )

    Process {
        'Creating PSCustomObject: PSFusion => PSFStorageEndpointCbsAzureIscsi' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "storage_endpoint_collection_identity" = ${StorageEndpointCollectionIdentity}
            "load_balancer" = ${LoadBalancer}
            "load_balancer_addresses" = ${LoadBalancerAddresses}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to StorageEndpointCbsAzureIscsi<PSCustomObject>

.DESCRIPTION

Convert from JSON to StorageEndpointCbsAzureIscsi<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

StorageEndpointCbsAzureIscsi<PSCustomObject>
#>
function ConvertFrom-PSFJsonToStorageEndpointCbsAzureIscsi {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSFusion => PSFStorageEndpointCbsAzureIscsi' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in PSFStorageEndpointCbsAzureIscsi
        $AllProperties = ("storage_endpoint_collection_identity", "load_balancer", "load_balancer_addresses")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "storage_endpoint_collection_identity"))) { #optional property not found
            $StorageEndpointCollectionIdentity = $null
        } else {
            $StorageEndpointCollectionIdentity = $JsonParameters.PSobject.Properties["storage_endpoint_collection_identity"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "load_balancer"))) { #optional property not found
            $LoadBalancer = $null
        } else {
            $LoadBalancer = $JsonParameters.PSobject.Properties["load_balancer"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "load_balancer_addresses"))) { #optional property not found
            $LoadBalancerAddresses = $null
        } else {
            $LoadBalancerAddresses = $JsonParameters.PSobject.Properties["load_balancer_addresses"].value
        }

        $PSO = [PSCustomObject]@{
            "storage_endpoint_collection_identity" = ${StorageEndpointCollectionIdentity}
            "load_balancer" = ${LoadBalancer}
            "load_balancer_addresses" = ${LoadBalancerAddresses}
        }

        return $PSO
    }

}

