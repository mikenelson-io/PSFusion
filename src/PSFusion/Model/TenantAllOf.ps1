#
# Pure Fusion API
# Pure Fusion is fully API-driven. Most APIs which change the system (POST, PATCH, DELETE) return an Operation in status ""Pending"" or ""Running"". You can poll (GET) the operation to check its status, waiting for it to change to ""Succeeded"" or ""Failed"". 
# Version: 1.1
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER TenantSpacesLink
No description available.
.OUTPUTS

TenantAllOf<PSCustomObject>
#>

function Initialize-PSFTenantAllOf {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TenantSpacesLink}
    )

    Process {
        'Creating PSCustomObject: PSFusion => PSFTenantAllOf' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "tenant_spaces_link" = ${TenantSpacesLink}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to TenantAllOf<PSCustomObject>

.DESCRIPTION

Convert from JSON to TenantAllOf<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

TenantAllOf<PSCustomObject>
#>
function ConvertFrom-PSFJsonToTenantAllOf {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSFusion => PSFTenantAllOf' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in PSFTenantAllOf
        $AllProperties = ("tenant_spaces_link")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "tenant_spaces_link"))) { #optional property not found
            $TenantSpacesLink = $null
        } else {
            $TenantSpacesLink = $JsonParameters.PSobject.Properties["tenant_spaces_link"].value
        }

        $PSO = [PSCustomObject]@{
            "tenant_spaces_link" = ${TenantSpacesLink}
        }

        return $PSO
    }

}

