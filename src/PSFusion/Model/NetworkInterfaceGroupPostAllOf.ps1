#
# Pure Fusion API
# Pure Fusion is fully API-driven. Most APIs which change the system (POST, PATCH, DELETE) return an Operation in status ""Pending"" or ""Running"". You can poll (GET) the operation to check its status, waiting for it to change to ""Succeeded"" or ""Failed"". 
# Version: 1.1
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER GroupType
The type of this Network Interface Group.
.PARAMETER Eth
No description available.
.OUTPUTS

NetworkInterfaceGroupPostAllOf<PSCustomObject>
#>

function Initialize-PSFNetworkInterfaceGroupPostAllOf {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("eth")]
        [String]
        ${GroupType},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Eth}
    )

    Process {
        'Creating PSCustomObject: PSFusion => PSFNetworkInterfaceGroupPostAllOf' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($null -eq $GroupType) {
            throw "invalid value for 'GroupType', 'GroupType' cannot be null."
        }


        $PSO = [PSCustomObject]@{
            "group_type" = ${GroupType}
            "eth" = ${Eth}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to NetworkInterfaceGroupPostAllOf<PSCustomObject>

.DESCRIPTION

Convert from JSON to NetworkInterfaceGroupPostAllOf<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

NetworkInterfaceGroupPostAllOf<PSCustomObject>
#>
function ConvertFrom-PSFJsonToNetworkInterfaceGroupPostAllOf {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSFusion => PSFNetworkInterfaceGroupPostAllOf' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in PSFNetworkInterfaceGroupPostAllOf
        $AllProperties = ("group_type", "eth")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'group_type' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "group_type"))) {
            throw "Error! JSON cannot be serialized due to the required property 'group_type' missing."
        } else {
            $GroupType = $JsonParameters.PSobject.Properties["group_type"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "eth"))) { #optional property not found
            $Eth = $null
        } else {
            $Eth = $JsonParameters.PSobject.Properties["eth"].value
        }

        $PSO = [PSCustomObject]@{
            "group_type" = ${GroupType}
            "eth" = ${Eth}
        }

        return $PSO
    }

}

