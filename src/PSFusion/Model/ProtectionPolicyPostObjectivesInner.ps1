#
# Pure Fusion API
# Pure Fusion is fully API-driven. Most APIs which change the system (POST, PATCH, DELETE) return an Operation in status ""Pending"" or ""Running"". You can poll (GET) the operation to check its status, waiting for it to change to ""Succeeded"" or ""Failed"". 
# Version: 1.1
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Json

JSON object

.OUTPUTS

ProtectionPolicyPostObjectivesInner<PSCustomObject>
#>
function ConvertFrom-PSFJsonToProtectionPolicyPostObjectivesInner {
    [CmdletBinding()]
    Param (
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        $match = 0
        $matchType = $null
        $matchInstance = $null

        # try to match RPO defined in the oneOf schemas
        try {
            $matchInstance = ConvertFrom-PSFJsonToRPO $Json

            foreach($property in $matchInstance.PsObject.Properties) {
                if ($null -ne $property.Value) {
                    $matchType = "RPO"
                    $match++
                    break
                }
            }
        } catch {
            # fail to match the schema defined in oneOf, proceed to the next one
            Write-Debug "Failed to match 'RPO' defined in oneOf (PSFProtectionPolicyPostObjectivesInner). Proceeding to the next one if any."
        }

        # try to match Retention defined in the oneOf schemas
        try {
            $matchInstance = ConvertFrom-PSFJsonToRetention $Json

            foreach($property in $matchInstance.PsObject.Properties) {
                if ($null -ne $property.Value) {
                    $matchType = "Retention"
                    $match++
                    break
                }
            }
        } catch {
            # fail to match the schema defined in oneOf, proceed to the next one
            Write-Debug "Failed to match 'Retention' defined in oneOf (PSFProtectionPolicyPostObjectivesInner). Proceeding to the next one if any."
        }

        if ($match -gt 1) {
            throw "Error! The JSON payload matches more than one type defined in oneOf schemas ([RPO, Retention]). JSON Payload: $($Json)"
        } elseif ($match -eq 1) {
            return [PSCustomObject]@{
                "ActualType" = ${matchType}
                "ActualInstance" = ${matchInstance}
                "OneOfSchemas" = @("RPO", "Retention")
            }
        } else {
            throw "Error! The JSON payload doesn't matches any type defined in oneOf schemas ([RPO, Retention]). JSON Payload: $($Json)"
        }
    }
}

