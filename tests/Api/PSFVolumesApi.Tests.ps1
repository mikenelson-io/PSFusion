#
# Pure Fusion API
# Pure Fusion is fully API-driven. Most APIs which change the system (POST, PATCH, DELETE) return an Operation in status ""Pending"" or ""Running"". You can poll (GET) the operation to check its status, waiting for it to change to ""Succeeded"" or ""Failed"". 
# Version: 1.1
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'PSFusion' -name 'PSFPSFVolumesApi' {
    Context 'New-PSFVolume' {
        It 'Test New-PSFVolume' {
            #$TestResult = New-PSFVolume -TenantName "TEST_VALUE" -TenantSpaceName "TEST_VALUE" -VolumePost "TEST_VALUE" -XRequestID "TEST_VALUE" -Authorization "TEST_VALUE" -XCorrelationID "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PSFVolume' {
        It 'Test Remove-PSFVolume' {
            #$TestResult = Remove-PSFVolume -TenantName "TEST_VALUE" -TenantSpaceName "TEST_VALUE" -VolumeName "TEST_VALUE" -XRequestID "TEST_VALUE" -Authorization "TEST_VALUE" -XCorrelationID "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PSFVolume' {
        It 'Test Get-PSFVolume' {
            #$TestResult = Get-PSFVolume -TenantName "TEST_VALUE" -TenantSpaceName "TEST_VALUE" -VolumeName "TEST_VALUE" -XRequestID "TEST_VALUE" -Authorization "TEST_VALUE" -XCorrelationID "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PSFVolumeById' {
        It 'Test Get-PSFVolumeById' {
            #$TestResult = Get-PSFVolumeById -VolumeId "TEST_VALUE" -XRequestID "TEST_VALUE" -Authorization "TEST_VALUE" -XCorrelationID "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PSFVolumePerformance' {
        It 'Test Get-PSFVolumePerformance' {
            #$TestResult = Get-PSFVolumePerformance -TenantName "TEST_VALUE" -TenantSpaceName "TEST_VALUE" -VolumeName "TEST_VALUE" -XRequestID "TEST_VALUE" -Authorization "TEST_VALUE" -XCorrelationID "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PSFVolumeSpace' {
        It 'Test Get-PSFVolumeSpace' {
            #$TestResult = Get-PSFVolumeSpace -TenantName "TEST_VALUE" -TenantSpaceName "TEST_VALUE" -VolumeName "TEST_VALUE" -XRequestID "TEST_VALUE" -Authorization "TEST_VALUE" -XCorrelationID "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-PSFListVolumes' {
        It 'Test Invoke-PSFListVolumes' {
            #$TestResult = Invoke-PSFListVolumes -TenantName "TEST_VALUE" -TenantSpaceName "TEST_VALUE" -XRequestID "TEST_VALUE" -Authorization "TEST_VALUE" -XCorrelationID "TEST_VALUE" -Filter "TEST_VALUE" -Sort "TEST_VALUE" -Limit "TEST_VALUE" -Offset "TEST_VALUE" -Id "TEST_VALUE" -Name "TEST_VALUE" -DisplayName "TEST_VALUE" -SerialNumber "TEST_VALUE" -Size "TEST_VALUE" -CreatedAt "TEST_VALUE" -StorageClassId "TEST_VALUE" -PlacementGroupId "TEST_VALUE" -ProtectionPolicyId "TEST_VALUE" -ArrayId "TEST_VALUE" -SourceVolumeSnapshotId "TEST_VALUE" -Iqn "TEST_VALUE" -Destroyed "TEST_VALUE" -TimeRemaining "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-PSFQueryVolumes' {
        It 'Test Invoke-PSFQueryVolumes' {
            #$TestResult = Invoke-PSFQueryVolumes -Filter "TEST_VALUE" -Sort "TEST_VALUE" -Limit "TEST_VALUE" -Offset "TEST_VALUE" -Id "TEST_VALUE" -Name "TEST_VALUE" -DisplayName "TEST_VALUE" -SerialNumber "TEST_VALUE" -Size "TEST_VALUE" -CreatedAt "TEST_VALUE" -TenantSpaceId "TEST_VALUE" -TenantId "TEST_VALUE" -StorageClassId "TEST_VALUE" -PlacementGroupId "TEST_VALUE" -ProtectionPolicyId "TEST_VALUE" -ArrayId "TEST_VALUE" -SourceVolumeSnapshotId "TEST_VALUE" -Iqn "TEST_VALUE" -Destroyed "TEST_VALUE" -TimeRemaining "TEST_VALUE" -HostAccessPolicyId "TEST_VALUE" -XRequestID "TEST_VALUE" -Authorization "TEST_VALUE" -XCorrelationID "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-PSFVolume' {
        It 'Test Update-PSFVolume' {
            #$TestResult = Update-PSFVolume -TenantName "TEST_VALUE" -TenantSpaceName "TEST_VALUE" -VolumeName "TEST_VALUE" -VolumePatch "TEST_VALUE" -XRequestID "TEST_VALUE" -Authorization "TEST_VALUE" -XCorrelationID "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}
