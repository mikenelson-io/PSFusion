#
# Pure Fusion API
# Pure Fusion is fully API-driven. Most APIs which change the system (POST, PATCH, DELETE) return an Operation in status ""Pending"" or ""Running"". You can poll (GET) the operation to check its status, waiting for it to change to ""Succeeded"" or ""Failed"". 
# Version: 1.1
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'PSFusion' -name 'PSFPSFPlacementGroupsApi' {
    Context 'New-PSFPlacementGroup' {
        It 'Test New-PSFPlacementGroup' {
            #$TestResult = New-PSFPlacementGroup -TenantName "TEST_VALUE" -TenantSpaceName "TEST_VALUE" -PlacementGroupPost "TEST_VALUE" -XRequestID "TEST_VALUE" -Authorization "TEST_VALUE" -XCorrelationID "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Remove-PSFPlacementGroup' {
        It 'Test Remove-PSFPlacementGroup' {
            #$TestResult = Remove-PSFPlacementGroup -TenantName "TEST_VALUE" -TenantSpaceName "TEST_VALUE" -PlacementGroupName "TEST_VALUE" -XRequestID "TEST_VALUE" -Authorization "TEST_VALUE" -XCorrelationID "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PSFPlacementGroup' {
        It 'Test Get-PSFPlacementGroup' {
            #$TestResult = Get-PSFPlacementGroup -TenantName "TEST_VALUE" -TenantSpaceName "TEST_VALUE" -PlacementGroupName "TEST_VALUE" -XRequestID "TEST_VALUE" -Authorization "TEST_VALUE" -XCorrelationID "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PSFPlacementGroupById' {
        It 'Test Get-PSFPlacementGroupById' {
            #$TestResult = Get-PSFPlacementGroupById -PlacementGroupId "TEST_VALUE" -XRequestID "TEST_VALUE" -Authorization "TEST_VALUE" -XCorrelationID "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PSFPlacementGroupSessions' {
        It 'Test Get-PSFPlacementGroupSessions' {
            #$TestResult = Get-PSFPlacementGroupSessions -TenantName "TEST_VALUE" -TenantSpaceName "TEST_VALUE" -PlacementGroupName "TEST_VALUE" -XRequestID "TEST_VALUE" -Authorization "TEST_VALUE" -XCorrelationID "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PSFPlacementGroupsPerformance' {
        It 'Test Get-PSFPlacementGroupsPerformance' {
            #$TestResult = Get-PSFPlacementGroupsPerformance -TenantName "TEST_VALUE" -TenantSpaceName "TEST_VALUE" -PlacementGroupName "TEST_VALUE" -XRequestID "TEST_VALUE" -Authorization "TEST_VALUE" -XCorrelationID "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PSFPlacementGroupsSpace' {
        It 'Test Get-PSFPlacementGroupsSpace' {
            #$TestResult = Get-PSFPlacementGroupsSpace -TenantName "TEST_VALUE" -TenantSpaceName "TEST_VALUE" -PlacementGroupName "TEST_VALUE" -XRequestID "TEST_VALUE" -Authorization "TEST_VALUE" -XCorrelationID "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-PSFListPlacementGroups' {
        It 'Test Invoke-PSFListPlacementGroups' {
            #$TestResult = Invoke-PSFListPlacementGroups -TenantName "TEST_VALUE" -TenantSpaceName "TEST_VALUE" -XRequestID "TEST_VALUE" -Authorization "TEST_VALUE" -XCorrelationID "TEST_VALUE" -Filter "TEST_VALUE" -Sort "TEST_VALUE" -Limit "TEST_VALUE" -Offset "TEST_VALUE" -Id "TEST_VALUE" -Name "TEST_VALUE" -DisplayName "TEST_VALUE" -ArrayId "TEST_VALUE" -Iqn "TEST_VALUE" -StorageServiceId "TEST_VALUE" -AvailabilityZoneId "TEST_VALUE" -PlacementEngine "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-PSFQueryPlacementGroups' {
        It 'Test Invoke-PSFQueryPlacementGroups' {
            #$TestResult = Invoke-PSFQueryPlacementGroups -XRequestID "TEST_VALUE" -Authorization "TEST_VALUE" -XCorrelationID "TEST_VALUE" -Filter "TEST_VALUE" -Sort "TEST_VALUE" -Limit "TEST_VALUE" -Offset "TEST_VALUE" -Id "TEST_VALUE" -Name "TEST_VALUE" -DisplayName "TEST_VALUE" -TenantSpaceId "TEST_VALUE" -TenantId "TEST_VALUE" -ArrayId "TEST_VALUE" -Iqn "TEST_VALUE" -StorageServiceId "TEST_VALUE" -AvailabilityZoneId "TEST_VALUE" -PlacementEngine "TEST_VALUE" -RegionName "TEST_VALUE" -AvailabilityZoneName "TEST_VALUE" -ArrayName "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-PSFPlacementGroup' {
        It 'Test Update-PSFPlacementGroup' {
            #$TestResult = Update-PSFPlacementGroup -TenantName "TEST_VALUE" -TenantSpaceName "TEST_VALUE" -PlacementGroupName "TEST_VALUE" -PlacementGroupPatch "TEST_VALUE" -XRequestID "TEST_VALUE" -Authorization "TEST_VALUE" -XCorrelationID "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}
